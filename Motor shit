#include <mbed.h>


// Define PWM pins for the motors
mbed::PwmOut motorA_pwm(P1_2);  // Motor 1 PWM pin
mbed::PwmOut motorB_pwm(P0_27); // Motor 2 PWM pin


// Define direction control pins for the motors
mbed::DigitalOut motorA_dir(P0_4); // Motor 1 direction pin
mbed::DigitalOut motorB_dir(P0_5); // Motor 2 direction pin


// Define the motor speed (between 0.0 and 1.0)
float motor_speed = 0.5;


void setup() {
    // Initialize Serial communication at 9600 baud rate
    Serial.begin(9600);
    Serial.println("Serial communication started.");


    // Set PWM period (optional, depending on motor driver requirements)
    motorA_pwm.period(0.001);  // Set PWM period to 1 ms
    motorB_pwm.period(0.001);  // Set PWM period to 1 ms


    // Set motor directions
    motorA_dir = 1;  // Set motor 1 to forward direction
    motorB_dir = 0;  // Set motor 2 to reverse direction


    // Set motor speeds
    motorA_pwm.write(motor_speed);  // Set speed for motor 1
    motorB_pwm.write(motor_speed);  // Set speed for motor 2
}


void loop() {
    // Check if data is available on the serial port
    if (Serial.available() > 0) {
        // Read incoming byte
        char command = Serial.read();


        // Check the command and adjust motor behavior accordingly
        if (command == 'w') {  // 'f' for forward
            motorA_dir = 1;
            motorB_dir = 0;
            Serial.println("Motors set to forward.");
        } else if (command == 'a') { // 'a' for spin left}
            motorA_dir = 1;
            motorB_dir = 1;
            Serial.println("Motors set to left turn");
        } else if (command == 'd') { // 'd' for spin right}
            motorA_dir = 0;
            motorB_dir = 0;
            Serial.println("Motors set to left right");
        } else if (command == 's') {  // 's' for reverse
            motorA_dir = 0;
            motorB_dir = 1;
            Serial.println("Motors set to reverse.");
        } else if (command == 'b') {  // 's' for stop
            motorA_pwm.write(0);
            motorB_pwm.write(0);
            Serial.println("Motors stopped.");
        } else if (command == 'u') {  // 'u' for increase speed
            motor_speed = min(motor_speed + 0.1, 1.0);
            motorA_pwm.write(motor_speed);
            motorB_pwm.write(motor_speed);
            Serial.print("Motor speed increased to ");
            Serial.println(motor_speed);
        } else if (command == 'h') {  // 'd' for decrease speed
            motor_speed = max(motor_speed - 0.1, 0.0);
            motorA_pwm.write(motor_speed);
            motorB_pwm.write(motor_speed);
            Serial.print("Motor speed decreased to ");
            Serial.println(motor_speed);
        }
    }
}
